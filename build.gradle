plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

group 'ca.guig'
version '1.0.0'

sourceCompatibility = JavaVersion.VERSION_14
targetCompatibility = JavaVersion.VERSION_14

repositories {
    jcenter()
}

configurations {
    testImplementation {
        exclude group: 'junit'
        exclude group: 'org.junit.vintage'
    }
}

dependencies {
    // Web
    implementation('org.springframework.boot:spring-boot-starter-web')

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

bootJar {
    layered()
}

// *********************************************************************************************************************

apply plugin: 'checkstyle'

checkstyle {
    toolVersion = '8.36.2'
    maxWarnings = 0
    maxErrors = 0
}

project.afterEvaluate {
    tasks.withType(Test) {
        shouldRunAfter tasks.withType(Checkstyle)
    }
}

// *********************************************************************************************************************

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.6"
}

check.dependsOn jacocoTestReport

project.afterEvaluate {
    jacocoTestReport.shouldRunAfter tasks.withType(Test)
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'BUNDLE'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = project.hasProperty('minCodeCoverage') ? Double.parseDouble("${project.minCodeCoverage}") : 1.0
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.shouldRunAfter jacocoTestReport
